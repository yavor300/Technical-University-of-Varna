package bg.tu_varna.sit.task2;

/**
 * Задача 2
 * <p>
 * Подберете подходящи модификатори за достъп в задачата и поставете
 * сорс файловете в пакет bg.tu_varna.sit.task2
 * <p>
 * Реализирайте клас страница (Paper), който се описва с процент
 * на запълване (fillRate) и имплементира родителския метод clone.
 * Да се реализира клас Машина (Machine) която има цена (price) и
 * поведение създаване на печатен лист (createТracePaper), който приема
 * като параметър брой листи за отпечатване и връща като резултат масив
 * с ново създадени страници.
 * <p>
 * Машината се наследява от клас Принтер (Printer) и се разширява с брой
 * на страници (numberOfPages), които се принтират за 1 минута и съдържание
 * за принтиране (content) метода приема текст, който трябва да се принтира.
 * <p>
 * Класа Printer имплементира метода createТracePaper като разделя текста за
 * принтиране по 2500 символа на страница. Процента на запълване на страница
 * се определя от броя печатаеми символи, непечатаемите символи са: нов ред;
 * таболация; спейс. Параметъра на метода createТracePaper се използва за
 * това колко екземпляра да бъдат направени от един лист.
 * <p>
 * Създайте клас Копирна машина (Duplicator), който разширява машината с
 * количество хартия (paperCount) и съдържание за принтиране (content) метода
 * приема страница за копиране. Класа Duplicator имплементира метода createТracePaper,
 * като създава нова обект от класа Paper с метода clone(). Ако в копирната машина няма
 * листи за копиране метода createТracePaper
 * връща празен масив. Параметъра на метода createТracePaper се използва за това колко
 * екземпляра да бъдат направени от копирания лист.
 */
class Application {

  public static void main(String[] args) {

    Machine printer = new Printer(2, "aaaaaaaaaa");
    Paper[] tracePaper = printer.createTracePaper(3);

    Duplicator duplicator = new Duplicator(2, 2, new Paper(80));
    Paper[] tracePaper1 = duplicator.createTracePaper(3);
  }
}
