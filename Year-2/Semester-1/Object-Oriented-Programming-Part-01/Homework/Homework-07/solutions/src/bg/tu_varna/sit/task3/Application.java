package bg.tu_varna.sit.task3;

/**
 * Задача 3
 * <p>
 * Подберете подходящи модификатори за достъп в задачата и поставете сорс
 * файловете в пакет bg.tu_varna.sit.task3
 * Да се създаде програма за магазин.
 * За целта са необходими:
 * - Интерфейс Delivery с метод needsDelivery(), който указва дали дадената
 * стока се нуждае от доставка;
 * - Енумерация тип стока (ItemType) със стойности храна (food) и напитка (drink);
 * - Абстрактен клас Item, имплементиращ Delivery. Класът има атрибути име (name),
 * срок на годност в дни (daysToExpire),
 * налично количество (availableQuantity) и тип на стоката (itemType). Дефинирайте
 * необходимия конструктор;
 * - Клас Bread, наследяващ Item и с атрибут съдържание на бяло брашно (whiteFlourPercentage).
 * Дефинирайте необходимия конструктор. Има необходимост за доставка ако срокът за годност
 * е по-малък от 5 дни и хлябът е със съдържание на бяло брашно над
 * 75 или са останали по-малко от 10 бройки;
 * - Клас Cheese, наследяващ Item и с атрибут грамаж на опаковката (gramsPerPackage).
 * Дефинирайте необходимия конструктор. Има необходимост от доставка ако са останали
 * по-малко от 10 бройки сирене в опаковки до 400 грама;
 * - Клас Milk, наследяващ Item и с атрибут, указващ процента масленост (fatPercentage).
 * Дефинирайте необходимия конструктор. Има необходимост от доставка ако млякото е
 * трайност до 15 дни, останали са по-малко от 10 броя и маслеността е по-голяма от 2%;
 * - Клас Water, наследяващ Item и с атрибут обща минерализация (mineralContent).
 * Дефинирайте необходимия конструктор. Има необходимост от доставка ако са останали
 * по-малко от 30 броя или ако срокът на годност изтича след по-малко от 20 дни.
 * Създайте клас Shop, който има като атрибут масив от стоки (items) и дефинирайте
 * необходимия конструктор. Класът има методи:
 * - getItemCountDelivery(), който изчислява и връща броя стоки, които се нуждаят от доставка;
 * - getAverageDaysToExpire(), който изчислява и връща средния срок на годност за стоките в магазина;
 * - getAvailableDrinksCount(), който намира и връща колко са наличните напитки в магазина.
 * Дефинирайте клас Application с главна функция и тествайте описаните функционалности.
 */
public class Application {

  public static void main(String[] args) {

    Item bread = new Bread("Bread", 3, 4, ItemType.food, 30);
    Item cheese = new Cheese("Cheese", 10, 7, ItemType.food, 300);
    Item milk = new Milk("Milk", 5, 2, ItemType.drink, 3);
    Item water = new Water("Water", 0, 1, ItemType.drink, 70);

    Item[] items = {bread, cheese, milk, water};

    Shop shop = new Shop(items);

    System.out.println(shop.getAvailableDrinksCount());
    System.out.println(shop.getAverageDaysToExpire());
    System.out.println(shop.getItemCountDelivery());
  }
}
