package bg.tu_varna.sit.task5;

/**
 * Задача 5
 * <p>
 * Подберете подходящи модификатори за достъп в задачата и поставете
 * сорс файловете в пакет bg.tu_varna.sit.task5.
 * Да се състави програма за прогнозиране на победител от спортна среща.
 * За целта са необходими:
 * - Интерфейс прогнозен калкулатор (PredictionCalculator) с метод за
 * предвиждане и връщане на името на победителя (predictWinner);
 * - Интерфейс резултати (Results) с метод, който изчислява и връща
 * вероятността за победа (winProbability);
 * - Енумерация за категория отбор (TeamRank) със стойности силен
 * отбор (TOP_TEAM), отбор от средата (AVERAGE_TEAM) и слаб отбор (BOTTOM_TEAM);
 * - Енумерация за резултат от последната среща (LastGameResult)
 * със стойности победа (WIN), загуба (LOSS) и равенство (DRAW);
 * - Абстрактен клас отбор (Team), имплементиращ интерфейс резултати.
 * Класът има атрибути за име (name), категория (teamRank) и резултат
 * от последната среща (lastGameResult). Дефинирайте конструктор по всички полета и методи за достъп;
 * - Клас домакин (HomeTeam), който наследява отбор. Интерфейсният метод връща:
 * -- ако отборът е силен: 90% при резултат от последната среща победа,
 * 65% при резултат от последната среща равенство и 55% при загуба в последната среща;
 * -- ако отборът е в средата на класирането: 70% при победа в последната
 * среща, 48% при равенство в последната среща и 35% при загуба в последната среща;
 * -- в останалите случаи 60% при победа в последната среща, 40% при
 * равенство в последната среща и 20% при загуба;
 * - Клас гост (AwayTeam), наследяващ клас отбор. Интерфейсният метод връща:
 * -- ако отборът е силен: 80% при резултат от последната среща победа,
 * 60% при резултат от последната среща равенство и 45% при загуба в последната среща;
 * -- ако отборът е в средата на класирането: 60% при победа в последната
 * среща, 40% при равенство в последната среща и 30% при загуба в последната среща;
 * -- в останалите случаи 55% при победа в последната среща, 38% при
 * равенство в последната среща и 15% при загуба;
 * - Клас футболна среща (Football), имплементиращ интерфейс прогнозен
 * калкулатор с атрибути домакин (homeTeam) и гост (awayTeam). Дефинирайте
 * конструктор по всички полета. Интерфейсният метод връща домакина при
 * вероятност за негова победа повече от 80%, равенство (draw) при вероятност
 * за победа на домакина над 50% и госта в останалите случаи;
 * - Клас волейболна среща (Volleyball), имплементиращ интерфейс прогнозен
 * калкулатор. Класът има атрибути за домакин (homeTeam), гост (awayTeam),
 * дали е игран тайбрек в последния мач на домакина (lastGameTieBreakHome) и
 * дали е игран тайбрек в последния мач на госта (lastGameTieBreakAway). Интерфейсният метод връща:
 * -- ако е игран тайбрек в последния мач на домакина: госта, ако вероятността
 * за победа на домакина е до 60%, в противен случай се връща домакина;
 * -- ако е игран тайбрек в последния мач на госта: домакина, ако вероятността
 * за победа на домакина е до 60%, в противен случай се връща госта;
 * -- в останалите случаи се връща госта, ако вероятността за победа на домакина
 * е до 70% и домакина в останалите случаи.
 * Създайте генерик клас за прогноза (MatchPrediction). Дефинирайте в него генерик
 * метод за извеждане на прогнозния победител (displayPredictedWinner).
 * Дефинирайте клас Application с главна функция и тествайте описаните функционалности.
 */
public class Application {

  public static void main(String[] args) {

    HomeTeam homeTeam = new HomeTeam("home", TeamRank.BOTTOM_TEAM, LastGameResult.DRAW);
    AwayTeam awayTeam = new AwayTeam("away", TeamRank.AVERAGE_TEAM, LastGameResult.WIN);

    Football football = new Football(homeTeam, awayTeam);
    Volleyball volleyball = new Volleyball(homeTeam, awayTeam, true, false);

    MatchPrediction<Football> footballMatchPrediction = new MatchPrediction<>(football);
    footballMatchPrediction.displayPredictedWinner();

    MatchPrediction<Volleyball> volleyballMatchPrediction = new MatchPrediction<>(volleyball);
    volleyballMatchPrediction.displayPredictedWinner();
  }
}
