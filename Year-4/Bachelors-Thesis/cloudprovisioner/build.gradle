plugins {
    id 'java'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '8.3.6'
}

group = 'bg.tuvarna.sit'
version = findProperty('cloudProvisionerVersion')

repositories {
    mavenCentral()
}

dependencies {

    implementation(platform('software.amazon.awssdk:bom:2.31.6'))
    implementation('software.amazon.awssdk:s3')
    implementation("software.amazon.awssdk:eks")
    implementation "software.amazon.awssdk:sts"

    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.18.3')
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.1.3'
    implementation 'org.apache.httpcomponents.client5:httpclient5-fluent:5.1.3'
    implementation('org.slf4j:slf4j-api:2.0.17')
    implementation('ch.qos.logback:logback-classic:1.5.18')
    implementation('net.logstash.logback:logstash-logback-encoder:8.0')
    implementation 'com.google.inject:guice:7.0.0'
    implementation 'com.google.guava:guava:33.4.8-jre'

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
    testImplementation("org.mockito:mockito-core:5.18.0")
    testImplementation("org.mockito:mockito-junit-jupiter:5.18.0")
    testImplementation("org.assertj:assertj-core:3.27.3")
}

test {
    useJUnitPlatform()
}


tasks.shadowJar {
    archiveClassifier = ""
}

tasks.register("generatePluginVersion") {

    def outputFile = layout.buildDirectory.file("generated-resources/plugin-version.properties").get().asFile
    inputs.property("cloudProvisionerVersion", version)
    outputs.file(outputFile)

    doLast {
        outputFile.parentFile.mkdirs()
        outputFile.text = "version=${project.findProperty("cloudProvisionerVersion")}\n"
    }
}

sourceSets {
    main {
        resources {
            srcDir "$buildDir/generated-resources"
        }
    }
}

processResources {
    dependsOn tasks.named("generatePluginVersion")
}

afterEvaluate {
    tasks.named("generateMetadataFileForShadowPublication") {
        dependsOn tasks.named("jar")
    }
}

gradlePlugin {
    plugins {
        cloudProvisioner {
            id = 'bg.tuvarna.sit.cloudprovisioner'
            implementationClass = 'bg.tuvarna.sit.cloud.gradle.CloudProvisionerPlugin'
        }
    }
}

publishing {
    publications {
        shadow(MavenPublication) {
            from components.shadow
        }
    }
}
